kernel void imgTest2(__read_only image3d_t inTexture, __write_only image3d_t outTexture, float xres, float yres, float zres){
    #pragma OPENCL EXTENSION cl_khr_3d_image_writes : enable
 //   #pragma OPENCL EXTENSION cl_khr_fp64 : enable
    const sampler_t smp =  CLK_NORMALIZED_COORDS_TRUE | CLK_ADDRESS_CLAMP | CLK_FILTER_NEAREST;
    int4 offsets[27] = 
        {(int4)(-1,-1,-1,0), (int4)(-1,0,-1,0), (int4)(-1,1,-1,0),
        (int4)(-1,-1,0,0), (int4)(-1,0,0,0), (int4)(-1,1,0,0),
        (int4)(-1,-1,1,0), (int4)(-1,0,1,0), (int4)(-1,1,1,0),
        (int4)(0,-1,-1,0), (int4)(0,0,-1,0), (int4)(0,1,-1,0),
        (int4)(0,-1,0,0), (int4)(0,0,0,0), (int4)(0,1,0,0),
        (int4)(0,-1,1,0), (int4)(0,0,1,0), (int4)(0,1,1,0),
        (int4)(1,-1,-1,0), (int4)(1,0,-1,0), (int4)(1,1,-1,0),
        (int4)(1,-1,0,0), (int4)(1,0,0,0), (int4)(1,1,0,0),
        (int4)(1,-1,1,0), (int4)(1,0,1,0), (int4)(1,1,1,0)};
    
    const float sqrt3  = sqrt((float)3)/3;
    const float sqrt2 = sqrt((float)2)/2;
    float weightsX[27] = {-sqrt3, -sqrt2, -sqrt3, -sqrt2, -1, -sqrt2, -sqrt3, 
        -sqrt2, -sqrt3, 0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt3, sqrt2, sqrt3, sqrt2,
        1, sqrt2, sqrt3, sqrt2, sqrt3};
    float weightsY[27] = {-sqrt3, 0, sqrt3, -sqrt2, 0, sqrt2,-sqrt3, 0, sqrt3, 
        -sqrt2, 0, sqrt2, -1, 0, 1, -sqrt2, 0, sqrt2, -sqrt3, 0, sqrt3, -sqrt2, 
        0, sqrt2, -sqrt3, 0, sqrt3};
    float weightsZ[27] = {-sqrt3, -sqrt2, -sqrt3, 0, 0, 0, sqrt3, sqrt2, sqrt3, -sqrt2, -1, -sqrt2, 0, 0, 0, sqrt2, 1, sqrt2, -sqrt3, -sqrt2,
        -sqrt3, 0, 0, 0, sqrt3, sqrt2, sqrt3};
    
    int4 coord = (int4)(get_global_id(0), get_global_id(1), get_global_id(2), 0);

    float3 diff = (float3)(0.0f);
    for(int i = 0; i<27; i++){
        float value = read_imagef(inTexture, smp, (coord+offsets[i])).x * 32767.0f - 0.5f;
        diff.x += value*weightsX[i];
        diff.y += value*weightsY[i];
        diff.z += value*weightsZ[i];
    }

    diff.x /= xres;
    diff.y /= yres;
    diff.z /= zres;

    float4 pixel = (float4)(-normalize(diff), length(diff));

    write_imagef(outTexture, coord, pixel);
}